networks:
  frontend:
  backend:

services:
  mongo:
    image: mongo:5
    networks:
      - backend
    volumes:
      - "./mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/corona_travel --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s
    ports:
      - 27017:27017

  facts:
    image: ghcr.io/corona-travel/facts:latest
    environment:
      MONGO_URL: mongodb://mongo/corona_travel
      LOG_LEVEL: DEBUG
    networks:
      - backend
    ports:
      - 12341:1234

  media:
    image: ghcr.io/corona-travel/media:latest
    environment:
      MONGO_URL: mongodb://mongo/corona_travel
      LOG_LEVEL: DEBUG
    networks:
      - backend
    ports:
      - 12342:1234

  places:
    image: ghcr.io/corona-travel/places:latest
    environment:
      MONGO_URL: mongodb://mongo/corona_travel
      LOG_LEVEL: DEBUG
    networks:
      - backend
    ports:
      - 12343:1234

  quizzes:
    image: ghcr.io/corona-travel/quizzes:latest
    environment:
      MONGO_URL: mongodb://mongo/corona_travel
      LOG_LEVEL: DEBUG
    networks:
      - backend
    ports:
      - 12344:1234

  map_2d:
    build:
      dockerfile: ./Dockerfile
      args:
        SRC_PATH: ./src/map_2D
        APP_PATH: ./map_2D
        ASGI_APP: map_2D.app:app
    environment:
      LOG_LEVEL: DEBUG
      PLACES_URL: http://places:1234/
    networks:
      - backend
    ports:
      - 12345:1234

  map_3d:
    build:
      dockerfile: ./Dockerfile
      args:
        SRC_PATH: ./src/map_3D
        APP_PATH: ./map_3D
        ASGI_APP: map_3D.app:app
    environment:
      LOG_LEVEL: DEBUG
      FACTS_URL: http://facts:1234/
      MEDIA_URL: http://media:1234/
      QUIZZES_URL: http://quizzes:1234/
    networks:
      - backend
    ports:
      - 12346:1234
